{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchItems, addItems, updateItems, deleteItems } from './cartAPI';\nconst initialState = {\n  items: [],\n  status: 'idle'\n};\nexport const fetchItemsAsync = createAsyncThunk('carts/fetchItems', async () => {\n  const response = await fetchcart();\n  return response.data;\n});\nexport const addItemAsync = createAsyncThunk('cart/fetchItems', async item => {\n  await addItems(item);\n});\nexport const cartSlice = createSlice({\n  name: 'carts',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchItemsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchItemsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.carts = action.payload;\n    });\n    addCase(addItemAsync.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n      state.status = 'idle';\n    });\n  }\n});\nexport const {} = cartSlice.actions;\nexport const selectcarts = state => state.carts.carts;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchItems","addItems","updateItems","deleteItems","initialState","items","status","fetchItemsAsync","response","fetchcart","data","addItemAsync","item","cartSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","carts","payload","push","actions","selectcarts","reducer"],"sources":["/home/mrinal/MERN/Redux/Redux-Project/redux-api-example/src/features/cart/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchItems,addItems,updateItems,deleteItems } from './cartAPI';\n\nconst initialState = {\n  items : [],\n  status: 'idle',\n};\n\nexport const fetchItemsAsync = createAsyncThunk(\n  'carts/fetchItems',\n  async () => {\n    const response = await fetchcart();\n    return response.data;\n  }\n);\n\nexport const addItemAsync = createAsyncThunk(\n  'cart/fetchItems',\n  async (item)=>{\n    await addItems(item)\n  }\n)\n\nexport const cartSlice = createSlice({\n  name: 'carts',\n  initialState,\n  reducers: {\n    \n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchItemsAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchItemsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.carts = action.payload;\n      })\n      addCase(addItemAsync.fulfilled,(state,action)=>{\n        state.items.push(action.payload);\n        state.status = 'idle';\n      });\n  },\n});\n\nexport const { } = cartSlice.actions;\nexport const selectcarts = (state) => state.carts.carts;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,EAACC,QAAQ,EAACC,WAAW,EAACC,WAAW,QAAQ,WAAW;AAEvE,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAG,EAAE;EACVC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGT,gBAAgB,CAC7C,kBAAkB,EAClB,YAAY;EACV,MAAMU,QAAQ,GAAG,MAAMC,SAAS,CAAC,CAAC;EAClC,OAAOD,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGb,gBAAgB,CAC1C,iBAAiB,EACjB,MAAOc,IAAI,IAAG;EACZ,MAAMX,QAAQ,CAACW,IAAI,CAAC;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGd,WAAW,CAAC;EACnCe,IAAI,EAAE,OAAO;EACbV,YAAY;EACZW,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACX,eAAe,CAACY,OAAO,EAAGC,KAAK,IAAK;MAC3CA,KAAK,CAACd,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDY,OAAO,CAACX,eAAe,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACd,MAAM,GAAG,MAAM;MACrBc,KAAK,CAACG,KAAK,GAAGD,MAAM,CAACE,OAAO;IAC9B,CAAC,CAAC;IACFN,OAAO,CAACP,YAAY,CAACU,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MAC7CF,KAAK,CAACf,KAAK,CAACoB,IAAI,CAACH,MAAM,CAACE,OAAO,CAAC;MAChCJ,KAAK,CAACd,MAAM,GAAG,MAAM;IACvB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM,CAAE,CAAC,GAAGO,SAAS,CAACa,OAAO;AACpC,OAAO,MAAMC,WAAW,GAAIP,KAAK,IAAKA,KAAK,CAACG,KAAK,CAACA,KAAK;AACvD,eAAeV,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}